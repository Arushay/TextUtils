{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","switchMode","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","toLowerCase","charAt","slice","navigator","clipboard","writeText","split","join","filter","element","length","Alert","height","alert","role","word","lower","capitalize","msg","propType","PropTypes","string","about","defaultProps","App","setMode","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.62141545.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n \r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" to=\"/about\">{props.about}</a>\r\n            </li> */}\r\n          </ul>\r\n\r\n          <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\": \"light\"}`}>\r\n            <input className=\"form-check-input\" onClick={props.switchMode} type=\"checkbox\" id=\"darkMode\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      )\r\n}\r\n\r\n\r\n      // setting proptypes, it can be number, boolean or array\r\n      Navbar.propType = {\r\n        title: PropTypes.string,\r\n      about: PropTypes.string\r\n};\r\n\r\n      // set default props\r\n      Navbar.defaultProps = {\r\n        title: \"Title\",\r\n      about: \"About\"\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const clearClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n    }\r\n    const capClick = () => {\r\n        let newText = text.charAt(0).toUpperCase() + text.slice(1);\r\n        setText(newText);\r\n    }\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n    const removeExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\" style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }} >\r\n                <div className=\"mb-3\">\r\n                    <h2 className=\"mb-4\">{props.heading}</h2>\r\n                    <textarea className=\"form-control\" value={text} style={{ backgroundColor: props.mode === \"dark\" ? \"#2d3436\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\" }} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick} >Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick} >Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={clearClick} >Clear</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={capClick} >Cap</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy} >Copy</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={removeExtraSpace} >Remove extra spaces</button>\r\n                \r\n\r\n            </div>\r\n            <div className=\"container\" style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n\r\n                <h2> Text Summary</h2>\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length > 0 ? text : \"Nothing to preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: \"50px\"}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show `} role=\"alert\">\r\n            <strong>{capitalize( props.alert.type)} </strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport './App.css';\r\n// import About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n// react router import\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n  }\r\n  setTimeout(() => {\r\n    setAlert(null);\r\n  }, 2000)\r\n\r\n\r\n\r\n  // switch black/wite  mode\r\n  let switchMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#2d3436\";\r\n      showAlert(\"Dark mode enabled.\", \"success\");\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light mode enabled.\", \"success\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {/* <Router> */}\r\n        <Navbar title=\"TextUtils\" about=\"About Us\" mode={mode} switchMode={switchMode}  />\r\n        <Alert alert={alert} />\r\n        {/* <Switch> */}\r\n          {/* <Route exact path=\"/about\"> */}\r\n            {/* <About /> */}\r\n          {/* </Route> */}\r\n           {/* <Route exact path=\"/\"> */}\r\n            <TextForm heading=\"TextUtils - word counter\" mode={mode} />\r\n          {/* </Route>\r\n        </Switch> */}\r\n      {/*  </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}