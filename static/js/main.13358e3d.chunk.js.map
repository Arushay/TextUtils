{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","switchMode","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","toLowerCase","charAt","slice","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","capitalize","msg","propType","PropTypes","string","about","defaultProps","App","setMode","setAlert","showAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.13358e3d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n \r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" to=\"/about\">{props.about}</a>\r\n            </li> */}\r\n          </ul>\r\n\r\n          <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\": \"light\"}`}>\r\n            <input className=\"form-check-input\" onClick={props.switchMode} type=\"checkbox\" id=\"darkMode\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      )\r\n}\r\n\r\n\r\n      // setting proptypes, it can be number, boolean or array\r\n      Navbar.propType = {\r\n        title: PropTypes.string,\r\n      about: PropTypes.string\r\n};\r\n\r\n      // set default props\r\n      Navbar.defaultProps = {\r\n        title: \"Title\",\r\n      about: \"About\"\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"uppercase click\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"lowercase click\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const clearClick = () => {\r\n        // console.log(\"clear click\");\r\n        let newText = \"\";\r\n        setText(newText);\r\n    }\r\n    const capClick = () => {\r\n        // console.log(\"Capitalize letter\");\r\n        let newText = text.charAt(0).toUpperCase() + text.slice(1);\r\n        setText(newText);\r\n    }\r\n    const handleCopy = () => {\r\n        console.log(\"copy text\");\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const removeExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\" style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }} >\r\n                <div className=\"mb-3\">\r\n                    <h2>{props.heading}</h2>\r\n                    <textarea className=\"form-control\" value={text} style={{ backgroundColor: props.mode === \"dark\" ? \"#2d3436\" : \"white\", color: props.mode === \"dark\" ? \"white\" : \"black\" }} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpClick} >Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoClick} >Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={clearClick} >Clear</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={capClick} >Cap</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopy} >Copy</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={removeExtraSpace} >Remove extra spaces</button>\r\n                \r\n\r\n            </div>\r\n            <div className=\"container\" style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n\r\n                <h2> Text Summary</h2>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length > 0 ? text : \"Type something in the box to analyze\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show `} role=\"alert\">\r\n            <strong>{capitalize( props.alert.type)} </strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n// react router import\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n  }\n  setTimeout(() => {\n    setAlert(null);\n  }, 2000)\n\n\n\n  // switch black/wite  mode\n  let switchMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#2d3436\";\n      showAlert(\"Dark mode enabled.\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode enabled.\", \"success\");\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" about=\"About Us\" mode={mode} switchMode={switchMode}  />\n        <Alert alert={alert} />\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n           {/* <Route exact path=\"/\"> */}\n            <TextForm heading=\"Enter the text here\" mode={mode} />\n          {/* </Route>\n        </Switch> */}\n      {/*  </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}